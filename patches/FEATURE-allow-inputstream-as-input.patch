diff -Naur src/com/ibm/zurich/idmx/utils/Parser.java src.patched/com/ibm/zurich/idmx/utils/Parser.java
--- a/src/com/ibm/zurich/idmx/utils/Parser.java	2013-04-30 15:37:20.000000000 +0200
+++ b/src/com/ibm/zurich/idmx/utils/Parser.java	2013-05-02 12:24:36.331413481 +0200
@@ -408,6 +408,17 @@
   }
 
   /**
+   * Parses XML from an InputStream.
+   * @param stream InputStream whose data should be parsed.
+   * @return
+   */
+  public final Object parse(InputStream stream) {
+      InputSource is = new InputSource();
+      is.setByteStream(stream);
+      return parse(is);
+  }
+
+  /**
    * @param inputSource Input source containing the XML that is to be parsed.
    * @return Element of the type as specified in the given XML file.
    */
diff -Naur src/com/ibm/zurich/idmx/utils/StructureStore.java src.patched/com/ibm/zurich/idmx/utils/StructureStore.java
--- a/src/com/ibm/zurich/idmx/utils/StructureStore.java	2013-04-30 15:37:20.000000000 +0200
+++ b/src/com/ibm/zurich/idmx/utils/StructureStore.java	2013-05-02 12:25:37.715409284 +0200
@@ -6,6 +6,7 @@
 //*/**/****************************************************************
 package com.ibm.zurich.idmx.utils;
 
+import java.io.InputStream;
 import java.net.URI;
 import java.util.HashMap;
 
@@ -56,6 +57,26 @@
         return get(objectName.toString(), objectName);
     }
 
+
+    /**
+     * Convenience method. Creates a structure using an InputStream.
+     *
+     * @param objectName
+     * 			Location indicator of a structural element.
+     * @param stream InputStream
+     * @return The object specified by <tt>objectName</tt>
+     */
+    public Object get(final String objectName, final InputStream stream) {
+        Object obj = structureMap.get(objectName);
+        if (obj == null) {
+            obj = load(stream);
+            if (obj != null) {
+                structureMap.put(objectName, obj);
+            }
+        }
+        return obj;
+    }
+
     /**
      * @param objectName
      *            Name of a structural element (e.g., credential structure,
@@ -90,6 +111,14 @@
     }
 
     /**
+     * @param stream InputStream for the object.
+     * @return Object read from the InputStream.
+     */
+    private Object load(final InputStream stream) {
+        return Parser.getInstance().parse(stream);
+    }
+
+    /**
      * Removes a URI from the store of structures. This method is needed when a
      * wrong secret key is loaded.
      * 
